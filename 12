#include <stdio.h>
#include <string.h>

struct Person 
{
    char first_name[50];
    char last_name[50];
    char third_name[50];
    char gender[10];
    char city[100];
    char street[100];
    char house_number[100];
    char apartment_number[100];
    int age;
};

struct Person population[100];
int population_count = 0;

void add_person(char* first_name, char* last_name, char* third_name, char* gender, char* city, char* street, char* house_number, char* apartment_number, int age)
{
    //функция добавления человека
    struct Person new_person;
    strcpy(new_person.first_name, first_name);
    strcpy(new_person.last_name, last_name);
    strcpy(new_person.third_name, third_name);
    strcpy(new_person.gender, gender);
    strcpy(new_person.city, city);
    strcpy(new_person.street, street);
    strcpy(new_person.house_number, house_number);
    strcpy(new_person.apartment_number, apartment_number);

    new_person.age = age;
    population[population_count++] = new_person;
}

void remove_person(int index) //удаление записи человека
{
    if (index > population_count || index < 1)
    {
        printf("ошибка! такого номера нет\n");
        return;
    }
    index--;
    for (int i = index; i < population_count - 1; i++) 
    {
        population[i] = population[i + 1];
    }
    population_count--;
}

void list_population()  //список населения
{
    for (int i = 0; i < population_count; i++) 
    {
        printf("Запись №:%d\n", i+1);
        printf("Ф.И.О.: %s %s %s\n", population[i].last_name, population[i].first_name, population[i].third_name);
        printf("Пол: %s\n", population[i].gender);
        printf("Домашний адрес: %s %s %s %s\n", population[i].city, population[i].street,population[i].house_number,population[i].apartment_number);
        printf("Возраст: %d\n", population[i].age);
        printf("\n");
    }
}

void list_retirement_age() //список пенсионеров
{
    int is_retirement = 0; 
    for (int i = 0; i < population_count; i++) 
    {
        if (population[i].age >= 60)
        {
            is_retirement = 1;
            printf("Запись №:%d\n", i+1);
            printf("Ф.И.О.: %s %s %s\n", population[i].last_name, population[i].first_name, population[i].third_name);
            printf("Пол: %s\n", population[i].gender);
            printf("Домашний адрес: %s %s %s %s\n", population[i].city, population[i].street,population[i].house_number,population[i].apartment_number);
            printf("Возраст: %d\n", population[i].age);
            printf("\n");
        }
    }
    if(!is_retirement)
    {
        printf("Пенсионеров не найдено!\n");
    }
}

void save_population(char* file_name) //сохранение файла (5)
{
    FILE *file = fopen(file_name, "w");
    if (file == NULL) 
    {
        printf("Ошибка при открытии файла!\n");
        return;
    }
    fwrite(&population_count, sizeof(int), 1, file);
    fwrite(population, sizeof(struct Person), population_count, file);
    fclose(file);
    printf("Данные успешно сохранены!\n");
}

void load_population(char* file_name) //загрузка из файла сохранения
{
    FILE *file = fopen(file_name, "r");
    if (file == NULL) 
    {
        printf("Ошибка при открытии файла!\n");
        return;
    }

    fread(&population_count, sizeof(int), 1, file);
    fread(population, sizeof(struct Person), population_count, file);
    fclose(file);
    printf("Данные успешно загружены!\n");
}

void menu()
{
    printf("1. Добавить запись о человеке\n");
    printf("2. Удалить запись о человеке\n");
    printf("3. Список населения\n");
    printf("4. Список людей пенсионного возраста\n");
    printf("5. Сохранить данные в файл\n");
    printf("6. Выход\n");
}

int main()
{
    char first_name[50], last_name[50], third_name[50], gender[10], city[100], street[100], house_number[100], apartment_number[100];
    int age;

    // загрузить данные из сохранения
    load_population("population.bin");

    while (1)
    {
        menu();
        int choice;
        scanf("%d", &choice);

        if (choice == 1)
        {
            printf("Введите имя: ");
            scanf("%s", first_name);
            printf("Введите фамилию: ");
            scanf("%s", last_name);
            printf("Введите отчество: ");
            scanf("%s", third_name);
            printf("Введите пол: ");
            scanf("%s", gender);
            printf("Введите населенный пункт: ");
            scanf("%s", city);
            printf("Введите улицу: ");
            scanf("%s", street);
            printf("Введите номер дома: ");
            scanf("%s", house_number);
            printf("Введите номер квартиры: ");
            scanf("%s", apartment_number);
            printf("Введите возраст: ");
            scanf("%d", &age);
            add_person(first_name, last_name, third_name, gender, city, street, house_number, apartment_number, age);
        } 
        else if (choice == 2)
        {
            int index;
            printf("Введите номер записи, которую желаете удалить: ");
            scanf("%d", &index);
            remove_person(index);
        }
        else if (choice == 3) 
        {
            list_population();
        } 
        else if (choice == 4) 
        {
            list_retirement_age();
        } 
        else if (choice == 5) 
        {
            save_population("population.bin");
        } 
        else if (choice == 6) 
        {
            printf("До свидания!\n");
            break;
        }
    }
    return 0;
}
